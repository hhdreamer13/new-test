{"ast":null,"code":"var _jsxFileName = \"/Users/hooman/Desktop/Hh Coding/_iCoding/Demo/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchInput from \"./searchInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      search: \"\",\n      pageSize: 4,\n      currentPage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = m => {\n      const movies = this.state.movies.filter(film => film !== m);\n      this.setState({\n        movies: movies\n      });\n    };\n    this.handleLike = m => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(m);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    this.handlePageChange = p => {\n      this.setState({\n        currentPage: p\n      });\n    };\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1,\n        search: \"\"\n      });\n    };\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n    this.handleSearch = _ref => {\n      let {\n        currentTarget: input\n      } = _ref;\n      // let searched = this.state.search;\n      this.setState({\n        search: input.value\n      });\n    };\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        movies: allMovies,\n        selectedGenre,\n        sortColumn,\n        search\n      } = this.state;\n      const genreFiltered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : null;\n      const searchFiltered = allMovies.filter(movie => movie.title.toUpperCase().includes(search.toUpperCase()));\n      const filtered = genreFiltered || searchFiltered || allMovies;\n\n      // const filtered =\n      //   selectedGenre && selectedGenre._id\n      //     ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n      //     : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the databse\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","Link","_","SearchInput","Movies","state","movies","genres","search","pageSize","currentPage","sortColumn","path","order","handleDelete","m","filter","film","setState","handleLike","index","indexOf","liked","handlePageChange","p","handleGenreSelect","genre","selectedGenre","handleSort","handleSearch","currentTarget","input","value","getPagedData","allMovies","genreFiltered","_id","searchFiltered","movie","title","toUpperCase","includes","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","marginBottom"],"sources":["/Users/hooman/Desktop/Hh Coding/_iCoding/Demo/vidly/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchInput from \"./searchInput\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    search: \"\",\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n  handleDelete = (m) => {\n    const movies = this.state.movies.filter((film) => film !== m);\n    this.setState({ movies: movies });\n  };\n  handleLike = (m) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(m);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n  handlePageChange = (p) => {\n    this.setState({ currentPage: p });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1, search: \"\" });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = ({ currentTarget: input }) => {\n    // let searched = this.state.search;\n    this.setState({ search: input.value });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      search,\n    } = this.state;\n\n    const genreFiltered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : null;\n\n    const searchFiltered = allMovies.filter((movie) =>\n      movie.title.toUpperCase().includes(search.toUpperCase())\n    );\n\n    const filtered = genreFiltered || searchFiltered || allMovies;\n\n    // const filtered =\n    //   selectedGenre && selectedGenre._id\n    //     ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n    //     : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, selectedGenre, sortColumn } = this.state;\n\n    if (count === 0) return <p>There are no movies to show</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className='row'>\n        <div className='col-2'>\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className='col'>\n          <Link\n            to='/movies/new'\n            className='btn btn-primary'\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the databse</p>\n          <SearchInput onSearch={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}