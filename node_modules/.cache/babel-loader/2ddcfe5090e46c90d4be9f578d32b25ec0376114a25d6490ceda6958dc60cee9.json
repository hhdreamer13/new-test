{"ast":null,"code":"var _jsxFileName = \"/Users/hooman/Desktop/Hh Coding/_iCoding/Demo/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport http from \"../services/httpService\";\nimport config from \"./config.json\";\nimport httpService from \"../services/httpService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      searchQuery: \"\",\n      selectedGenre: null,\n      pageSize: 4,\n      currentPage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = async m => {\n      const originalMovies = this.state.movies;\n      const movies = this.state.movies.filter(film => film !== m);\n      this.setState({\n        movies: movies\n      });\n      try {\n        await http.delete(config.apiMoviesEndpoint + \"/\" + m._id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) alert(\"This post has already been deleted.\");\n        this.setState({\n          posts: originalPosts\n        });\n      }\n    };\n    this.handleLike = m => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(m);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    this.handlePageChange = p => {\n      this.setState({\n        currentPage: p\n      });\n    };\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1,\n        searchQuery: \"\"\n      });\n    };\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n    this.handleSearch = query => {\n      // let searched = this.state.search;\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        movies: allMovies,\n        selectedGenre,\n        sortColumn,\n        searchQuery\n      } = this.state;\n      const genreFiltered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : null;\n      const searchFiltered = searchQuery ? allMovies.filter(movie => movie.title.toUpperCase().includes(searchQuery.toUpperCase())) : null;\n      const filtered = genreFiltered || searchFiltered || allMovies;\n\n      // const filtered =\n      //   selectedGenre && selectedGenre._id\n      //     ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n      //     : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n  async componentDidMount() {\n    const {\n      data: getGenres\n    } = await http.get(config.apiGenresEndpoint);\n    const {\n      data: getMovies\n    } = await http.get(config.apiMoviesEndpoint);\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres];\n    this.setState({\n      movies: getMovies,\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the databse\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchQuery,\n          onSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","Link","_","SearchBox","http","config","httpService","Movies","state","movies","genres","searchQuery","selectedGenre","pageSize","currentPage","sortColumn","path","order","handleDelete","m","originalMovies","filter","film","setState","delete","apiMoviesEndpoint","_id","ex","response","status","alert","posts","originalPosts","handleLike","index","indexOf","liked","handlePageChange","p","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allMovies","genreFiltered","searchFiltered","movie","title","toUpperCase","includes","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","get","apiGenresEndpoint","name","render","count","marginBottom"],"sources":["/Users/hooman/Desktop/Hh Coding/_iCoding/Demo/vidly/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport http from \"../services/httpService\";\nimport config from \"./config.json\";\nimport httpService from \"../services/httpService\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    searchQuery: \"\",\n    selectedGenre: null,\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  async componentDidMount() {\n    const { data: getGenres } = await http.get(config.apiGenresEndpoint);\n    const { data: getMovies } = await http.get(config.apiMoviesEndpoint);\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres];\n    this.setState({ movies: getMovies, genres });\n  }\n  handleDelete = async (m) => {\n    const originalMovies = this.state.movies;\n\n    const movies = this.state.movies.filter((film) => film !== m);\n    this.setState({ movies: movies });\n\n    try {\n      await http.delete(config.apiMoviesEndpoint + \"/\" + m._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        alert(\"This post has already been deleted.\");\n\n      this.setState({ posts: originalPosts });\n    }\n  };\n  handleLike = (m) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(m);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n  handlePageChange = (p) => {\n    this.setState({ currentPage: p });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = (query) => {\n    // let searched = this.state.search;\n    this.setState({\n      searchQuery: query,\n      selectedGenre: null,\n      currentPage: 1,\n    });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n\n    const genreFiltered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : null;\n\n    const searchFiltered = searchQuery\n      ? allMovies.filter((movie) =>\n          movie.title.toUpperCase().includes(searchQuery.toUpperCase())\n        )\n      : null;\n\n    const filtered = genreFiltered || searchFiltered || allMovies;\n\n    // const filtered =\n    //   selectedGenre && selectedGenre._id\n    //     ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n    //     : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, selectedGenre, sortColumn, searchQuery } =\n      this.state;\n\n    if (count === 0) return <p>There are no movies to show</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className='row'>\n        <div className='col-2'>\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className='col'>\n          <Link\n            to='/movies/new'\n            className='btn btn-primary'\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the databse</p>\n          <SearchBox value={searchQuery} onSearch={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}